{
  "_fv": 47,
  "_type": "procedure",
  "definition": {
    "procedurexml": "<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable type=\"Entity\" id=\"None\">None</variable></variables><block type=\"event_trigger\" deletable=\"false\" x=\"40\" y=\"40\"><field name=\"trigger\">no_ext_trigger</field><next><block type=\"variables_set_entity\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:None</field><value name=\"VAL\"><block type=\"entity_from_deps\"></block></value><next><block type=\"java_code\"><field name=\"CODE\">    double speed = 0.125/4;&amp;#10;    boolean adjustY = false;        &amp;#10;    Vec3 motionVector = entity.getDeltaMovement();&amp;#10;            Vec3 rotationVector = entity.getLookAngle();</field><next><block type=\"java_code\"><field name=\"CODE\">        Vec3 newMotion = new Vec3(&amp;#10;                motionVector.x + speed * Math.sin(rotationVector.x),&amp;#10;                adjustY ? (motionVector.y + speed * Math.sin(rotationVector.y)) : motionVector.y,&amp;#10;                motionVector.z + speed * Math.sin(rotationVector.z)&amp;#10;        );&amp;#10;        entity.setDeltaMovement(newMotion);</field></block></next></block></next></block></next></block></xml>"
  }
}